name: Publish Postgres Docker images

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - postgres/Dockerfile.*
      - .github/workflows/docker-postgres.yml

env:
  REGISTRY: index.docker.io
  IMAGE_NAME: binaryoverload/postgres-client

permissions:
  id-token: write
  attestations: write

jobs:
  publish_postgres:
    name: Publish Postgres Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu, alpine]
        postgres_version: [12, 13, 14, 15, 16, 17]
        exclude:
          - os: alpine
            postgres_version: 12
          - os: alpine
            postgres_version: 13
          - os: alpine
            postgres_version: 14

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.postgres_version }},enable=${{ matrix.os == 'ubuntu' }}
            type=raw,value=${{ matrix.postgres_version }}-${{ matrix.os }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        id: push
        with:
          context: ./postgres
          platforms: linux/amd64,linux/arm64
          file: ./postgres/Dockerfile.${{ matrix.os }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            POSTGRES_VERSION=${{ matrix.postgres_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Attest
        uses: actions/attest-build-provenance@v2
        id: attest
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
